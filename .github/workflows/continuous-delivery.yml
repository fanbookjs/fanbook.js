name: Continuous Delivery

on:
  workflow_dispatch:
    inputs:
      prNumber:
        description: The number of the PR that is being deployed
        required: true
      ref:
        description: The branch that is being deployed. Should be a branch on the given repository
        required: false
        default: main
      repository:
        description: The {owner}/{repository} that is being deployed.
        required: false
        default: fanbookjs/fanbook.js
  push:
    branches:
      - main

jobs:
  Publish:
    name: Publish Canary to npm
    permissions:
      id-token: write
    runs-on: ubuntu-latest
    if: github.repository_owner == 'fanbookjs'
    steps:
      - name: Checkout Project
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3
        with:
          fetch-depth: 0
          repository: ${{ github.event.inputs.repository || 'fanbookjs/fanbook.js' }}
          ref: ${{ github.event.inputs.ref || 'main' }}
      - name: Add TypeScript problem matcher
        run: echo "::add-matcher::.github/problemMatchers/tsc.json"
      - name: Use Node.js v18
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3
        with:
          node-version: 18
          cache: yarn
          registry-url: https://registry.yarnpkg.com/
      - name: Install Dependencies
        uses: ./.github/yarnCache
      - name: Build all packages
        run: yarn build
      - name: Bump Versions & Publish
        run: |
          if [[ -z "${NODE_AUTH_TOKEN}" ]]; then
            echo "NODE_AUTH_TOKEN is not set, skipping publish"
            exit 0
          fi
          TAG=$([[ ${{ github.event_name }} == 'push' ]] && echo 'canary' || echo 'pr-${{ github.event.inputs.prNumber }}')
          yarn config set npmAuthToken ${NODE_AUTH_TOKEN}
          yarn config set npmPublishRegistry "https://registry.yarnpkg.com"
          for d in packages/*; do
            pushd $d
            yarn bump --preid "${TAG}.$(git rev-parse --verify --short HEAD)"
            yarn npm publish --tag ${TAG}
            popd
          done
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
